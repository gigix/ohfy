CURRENT_DIR = File.dirname(__FILE__)

def application_dir
  File.join(CURRENT_DIR, "application")
end

def exec(cmd)
  puts "[Exec] #{cmd}"
  raise "Execution failed!" unless system cmd
end

def local_ip
  %x("ifconfig").split(/vnic\d\:/)[1].match(/inet (\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\s/)[1] + ":3000"
end

task :default => [:prepare_test_settings] do
  exec "ant -f #{application_dir}/build.xml clean debug test.local"
  exec "ant -f #{CURRENT_DIR}/application-test/build.xml test.run"
end

task :prepare_test_settings do
  settings_file = File.join(application_dir, "res", "values", "settings.xml")
  settings_template = File.join(application_dir, "src", "settings.xml.template")
  generate_settings_file(settings_file, settings_template)
  
  test_settings_file = File.join(application_dir, "test", "settings.properties")
  test_settings_template = File.join(application_dir, "test", "settings.properties.template")
  generate_settings_file(test_settings_file, test_settings_template)
end

task :release => :prepare_release_settings do
  exec "ant -f #{application_dir}/build.xml clean release"
  exec "scp #{application_dir}/bin/1HourForMe-release.apk ohfy@hourfor.me:~/ohfy/rails_root/public/apps/"
end

task :prepare_release_settings do
  settings_file = File.join(application_dir, "res", "values", "settings.xml")
  release_settings_file = File.join(application_dir, "src", "release.settings.xml")
  cp(release_settings_file, settings_file)
end

def generate_settings_file(settings_file, settings_template)
  settings_content = File.open(settings_template){|f| f.read}.gsub('#{SERVER_HOST}', local_ip)
  File.open(settings_file, 'w'){|f| f.write(settings_content)}  
end